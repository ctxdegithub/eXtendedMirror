#! /usr/bin/python
import os
import time
import sys

warning_message = "/* WARNING: This file has been autogenerated. \
Do not modify it directly! */"
template_dir = "templ"

variables = {
    'XM_FUNCTION_PARAM_MAX': 8,
    'XM_GET_N_SET_EXTRA_PARAM_MAX': 3,
    'XM_TEMPLATE_PARAM_MAX' : 4,
    'WARNING_MESSAGE' : warning_message
    }

def gen_seq(string, count, sep = ""):
    res = ""
    if type(count) is tuple:
        start = count[0]
        end = count[1]
    else:
        start = 0
        end = count

    for i in range(start, end):
        if i == start:
            res += string.replace("$", str(i))
        else:
            res += sep + string.replace("$", str(i))
    return res 


def generate_files(variables, dirname, names):
    for filename in names:
        fullname = dirname + "/" + filename
        if os.path.isfile(fullname) and filename.endswith(".py"):
            execfile(fullname, variables)
            fullname = fullname[len(template_dir):]
            if fullname.startswith("/"):
                fullname = fullname[1:]
            fullname = fullname[:-len(".py")]
            f = open(fullname, "w")
            f.write(variables["content"])
            f.close()

variables["gen_seq"] = gen_seq


def print_usage():
    print """gen_templ.py -- Generate source files from templates in the the templ folder
             
    Usage: python gen_templ.py [OPTIONS]
                  
    OPTIONS:

        --function-param-max <n_params>: Set the maximum number \
of supported function arguments to n_params.

        --get-n-set-extra-param-max <n_params>: Set the maximum \
number of supported extra parameter for getter and setters, to n_params.

        --template-param-max <n_params>: Set the maximum number \
of supported template parameter to n_params.

        --template-dir <dir>: Set the template directory to dir. """
    exit()


# Process input options
skip_next = False
try:
    for i in range(1, len(sys.argv)):
        if skip_next:
            skip_next = False
            continue
        elif (sys.argv[i] == "--function-param-max"):
            variables["XM_FUNCTION_PARAM_MAX"] = int(sys.argv[i+1])
        elif (sys.argv[i] == "--get-n-set-extra-param-max"):
            variables["XM_GET_N_SET_EXTRA_PARAM_MAX"] = int(sys.argv[i+1])
        elif (sys.argv[i] == "--template-param-max"):
            variables["XM_TEMPLATE_PARAM_MAX"] = int(sys.argv[i+1])
        elif (sys.argv[i] == "--template-dir"):
            template_dir = sys.argv[i+1];
        else:
            print_usage();
        skip_next = True
except:
    print_usage();

if os.path.isdir(template_dir):
    start_time = time.clock()
    os.path.walk(template_dir, generate_files, variables)
    print("completed in: " + str(time.clock() - start_time) + "s")
else:
    print "Error, directory '" + template_dir + "' does not exist"

